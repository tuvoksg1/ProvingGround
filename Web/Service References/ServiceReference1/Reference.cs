//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticateResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class AuthenticateResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int activeCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeCompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeCompanyProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.Company[] companiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int currentUserNotificationModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasActionPlanFeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasCaseManagementFeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool programsHaveGoalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sessionTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int activeCompanyId {
            get {
                return this.activeCompanyIdField;
            }
            set {
                if ((this.activeCompanyIdField.Equals(value) != true)) {
                    this.activeCompanyIdField = value;
                    this.RaisePropertyChanged("activeCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activeCompanyName {
            get {
                return this.activeCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.activeCompanyNameField, value) != true)) {
                    this.activeCompanyNameField = value;
                    this.RaisePropertyChanged("activeCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activeCompanyProfile {
            get {
                return this.activeCompanyProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.activeCompanyProfileField, value) != true)) {
                    this.activeCompanyProfileField = value;
                    this.RaisePropertyChanged("activeCompanyProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.Company[] companies {
            get {
                return this.companiesField;
            }
            set {
                if ((object.ReferenceEquals(this.companiesField, value) != true)) {
                    this.companiesField = value;
                    this.RaisePropertyChanged("companies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int currentUserNotificationMode {
            get {
                return this.currentUserNotificationModeField;
            }
            set {
                if ((this.currentUserNotificationModeField.Equals(value) != true)) {
                    this.currentUserNotificationModeField = value;
                    this.RaisePropertyChanged("currentUserNotificationMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasActionPlanFeature {
            get {
                return this.hasActionPlanFeatureField;
            }
            set {
                if ((this.hasActionPlanFeatureField.Equals(value) != true)) {
                    this.hasActionPlanFeatureField = value;
                    this.RaisePropertyChanged("hasActionPlanFeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasCaseManagementFeature {
            get {
                return this.hasCaseManagementFeatureField;
            }
            set {
                if ((this.hasCaseManagementFeatureField.Equals(value) != true)) {
                    this.hasCaseManagementFeatureField = value;
                    this.RaisePropertyChanged("hasCaseManagementFeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool programsHaveGoals {
            get {
                return this.programsHaveGoalsField;
            }
            set {
                if ((this.programsHaveGoalsField.Equals(value) != true)) {
                    this.programsHaveGoalsField = value;
                    this.RaisePropertyChanged("programsHaveGoals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sessionTimeout {
            get {
                return this.sessionTimeoutField;
            }
            set {
                if ((this.sessionTimeoutField.Equals(value) != true)) {
                    this.sessionTimeoutField = value;
                    this.RaisePropertyChanged("sessionTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenField, value) != true)) {
                    this.tokenField = value;
                    this.RaisePropertyChanged("token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                if ((object.ReferenceEquals(this.userIdField, value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnalysisGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyDBGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CompanySettings CompanySettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EscalationDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.InquisiteMapping InquisiteMappingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.AllegianceLicense LicenseFeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.PasswordPolicy PasswordPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemeasurementDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.UserCompanySettings UserCompanySettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisGroup {
            get {
                return this.AnalysisGroupField;
            }
            set {
                if ((this.AnalysisGroupField.Equals(value) != true)) {
                    this.AnalysisGroupField = value;
                    this.RaisePropertyChanged("AnalysisGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyDBGroupId {
            get {
                return this.CompanyDBGroupIdField;
            }
            set {
                if ((this.CompanyDBGroupIdField.Equals(value) != true)) {
                    this.CompanyDBGroupIdField = value;
                    this.RaisePropertyChanged("CompanyDBGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CompanySettings CompanySettings {
            get {
                return this.CompanySettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanySettingsField, value) != true)) {
                    this.CompanySettingsField = value;
                    this.RaisePropertyChanged("CompanySettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EscalationDays {
            get {
                return this.EscalationDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.EscalationDaysField, value) != true)) {
                    this.EscalationDaysField = value;
                    this.RaisePropertyChanged("EscalationDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.InquisiteMapping InquisiteMapping {
            get {
                return this.InquisiteMappingField;
            }
            set {
                if ((object.ReferenceEquals(this.InquisiteMappingField, value) != true)) {
                    this.InquisiteMappingField = value;
                    this.RaisePropertyChanged("InquisiteMapping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.AllegianceLicense LicenseFeatures {
            get {
                return this.LicenseFeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseFeaturesField, value) != true)) {
                    this.LicenseFeaturesField = value;
                    this.RaisePropertyChanged("LicenseFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCompanyId {
            get {
                return this.ParentCompanyIdField;
            }
            set {
                if ((this.ParentCompanyIdField.Equals(value) != true)) {
                    this.ParentCompanyIdField = value;
                    this.RaisePropertyChanged("ParentCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.PasswordPolicy PasswordPolicy {
            get {
                return this.PasswordPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordPolicyField, value) != true)) {
                    this.PasswordPolicyField = value;
                    this.RaisePropertyChanged("PasswordPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemeasurementDay {
            get {
                return this.RemeasurementDayField;
            }
            set {
                if ((this.RemeasurementDayField.Equals(value) != true)) {
                    this.RemeasurementDayField = value;
                    this.RaisePropertyChanged("RemeasurementDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.UserCompanySettings UserCompanySettings {
            get {
                return this.UserCompanySettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCompanySettingsField, value) != true)) {
                    this.UserCompanySettingsField = value;
                    this.RaisePropertyChanged("UserCompanySettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine3 {
            get {
                return this.AddressLine3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine3Field, value) != true)) {
                    this.AddressLine3Field = value;
                    this.RaisePropertyChanged("AddressLine3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanySettings", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class CompanySettings : Web.ServiceReference1.Settings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessThroughSsoOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Db2EntryPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.HeaderTheme HeaderThemeInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIPAddressRestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LandingPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxBinaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRetryOnFailureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.IPAddressRange[] RestrictedIPsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionTimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowApiInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TSAcceptedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessThroughSsoOnly {
            get {
                return this.AccessThroughSsoOnlyField;
            }
            set {
                if ((this.AccessThroughSsoOnlyField.Equals(value) != true)) {
                    this.AccessThroughSsoOnlyField = value;
                    this.RaisePropertyChanged("AccessThroughSsoOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Db2EntryPage {
            get {
                return this.Db2EntryPageField;
            }
            set {
                if ((this.Db2EntryPageField.Equals(value) != true)) {
                    this.Db2EntryPageField = value;
                    this.RaisePropertyChanged("Db2EntryPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultRoleId {
            get {
                return this.DefaultRoleIdField;
            }
            set {
                if ((this.DefaultRoleIdField.Equals(value) != true)) {
                    this.DefaultRoleIdField = value;
                    this.RaisePropertyChanged("DefaultRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.HeaderTheme HeaderThemeInfo {
            get {
                return this.HeaderThemeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderThemeInfoField, value) != true)) {
                    this.HeaderThemeInfoField = value;
                    this.RaisePropertyChanged("HeaderThemeInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIPAddressRestricted {
            get {
                return this.IsIPAddressRestrictedField;
            }
            set {
                if ((this.IsIPAddressRestrictedField.Equals(value) != true)) {
                    this.IsIPAddressRestrictedField = value;
                    this.RaisePropertyChanged("IsIPAddressRestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandingPage {
            get {
                return this.LandingPageField;
            }
            set {
                if ((this.LandingPageField.Equals(value) != true)) {
                    this.LandingPageField = value;
                    this.RaisePropertyChanged("LandingPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxBinaryData {
            get {
                return this.MaxBinaryDataField;
            }
            set {
                if ((this.MaxBinaryDataField.Equals(value) != true)) {
                    this.MaxBinaryDataField = value;
                    this.RaisePropertyChanged("MaxBinaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRetryOnFailure {
            get {
                return this.MaxRetryOnFailureField;
            }
            set {
                if ((this.MaxRetryOnFailureField.Equals(value) != true)) {
                    this.MaxRetryOnFailureField = value;
                    this.RaisePropertyChanged("MaxRetryOnFailure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSequence {
            get {
                return this.ProductSequenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSequenceField, value) != true)) {
                    this.ProductSequenceField = value;
                    this.RaisePropertyChanged("ProductSequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.IPAddressRange[] RestrictedIPs {
            get {
                return this.RestrictedIPsField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictedIPsField, value) != true)) {
                    this.RestrictedIPsField = value;
                    this.RaisePropertyChanged("RestrictedIPs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionTimeOut {
            get {
                return this.SessionTimeOutField;
            }
            set {
                if ((this.SessionTimeOutField.Equals(value) != true)) {
                    this.SessionTimeOutField = value;
                    this.RaisePropertyChanged("SessionTimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowApiInfo {
            get {
                return this.ShowApiInfoField;
            }
            set {
                if ((this.ShowApiInfoField.Equals(value) != true)) {
                    this.ShowApiInfoField = value;
                    this.RaisePropertyChanged("ShowApiInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TSAcceptedDate {
            get {
                return this.TSAcceptedDateField;
            }
            set {
                if ((this.TSAcceptedDateField.Equals(value) != true)) {
                    this.TSAcceptedDateField = value;
                    this.RaisePropertyChanged("TSAcceptedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquisiteMapping", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class InquisiteMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InquisiteSiteURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserManagementURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InquisiteSiteURL {
            get {
                return this.InquisiteSiteURLField;
            }
            set {
                if ((object.ReferenceEquals(this.InquisiteSiteURLField, value) != true)) {
                    this.InquisiteSiteURLField = value;
                    this.RaisePropertyChanged("InquisiteSiteURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserManagementURL {
            get {
                return this.UserManagementURLField;
            }
            set {
                if ((object.ReferenceEquals(this.UserManagementURLField, value) != true)) {
                    this.UserManagementURLField = value;
                    this.RaisePropertyChanged("UserManagementURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllegianceLicense", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.Core.Library.Licensing")]
    [System.SerializableAttribute()]
    public partial class AllegianceLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompanyMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.EnumsAllegianceFeatureFlags[] FeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.EnumsAllegianceFeatureFlags[] LicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LicenseMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseMaskedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompanyMask {
            get {
                return this.CompanyMaskField;
            }
            set {
                if ((this.CompanyMaskField.Equals(value) != true)) {
                    this.CompanyMaskField = value;
                    this.RaisePropertyChanged("CompanyMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.EnumsAllegianceFeatureFlags[] Features {
            get {
                return this.FeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturesField, value) != true)) {
                    this.FeaturesField = value;
                    this.RaisePropertyChanged("Features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.EnumsAllegianceFeatureFlags[] License {
            get {
                return this.LicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseField, value) != true)) {
                    this.LicenseField = value;
                    this.RaisePropertyChanged("License");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LicenseMask {
            get {
                return this.LicenseMaskField;
            }
            set {
                if ((this.LicenseMaskField.Equals(value) != true)) {
                    this.LicenseMaskField = value;
                    this.RaisePropertyChanged("LicenseMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseMasked {
            get {
                return this.UseMaskedField;
            }
            set {
                if ((this.UseMaskedField.Equals(value) != true)) {
                    this.UseMaskedField = value;
                    this.RaisePropertyChanged("UseMasked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordPolicy", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class PasswordPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarouselDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarouselLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxFailedLoginAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinimumLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PasswordExpirationDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PasswordPolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RE_RulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequireLowerCaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequireNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequirePasswordChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequireUpperCaseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarouselDuration {
            get {
                return this.CarouselDurationField;
            }
            set {
                if ((this.CarouselDurationField.Equals(value) != true)) {
                    this.CarouselDurationField = value;
                    this.RaisePropertyChanged("CarouselDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarouselLength {
            get {
                return this.CarouselLengthField;
            }
            set {
                if ((this.CarouselLengthField.Equals(value) != true)) {
                    this.CarouselLengthField = value;
                    this.RaisePropertyChanged("CarouselLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxFailedLoginAttempts {
            get {
                return this.MaxFailedLoginAttemptsField;
            }
            set {
                if ((this.MaxFailedLoginAttemptsField.Equals(value) != true)) {
                    this.MaxFailedLoginAttemptsField = value;
                    this.RaisePropertyChanged("MaxFailedLoginAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumLength {
            get {
                return this.MinimumLengthField;
            }
            set {
                if ((this.MinimumLengthField.Equals(value) != true)) {
                    this.MinimumLengthField = value;
                    this.RaisePropertyChanged("MinimumLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PasswordExpirationDays {
            get {
                return this.PasswordExpirationDaysField;
            }
            set {
                if ((this.PasswordExpirationDaysField.Equals(value) != true)) {
                    this.PasswordExpirationDaysField = value;
                    this.RaisePropertyChanged("PasswordExpirationDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PasswordPolicyId {
            get {
                return this.PasswordPolicyIdField;
            }
            set {
                if ((this.PasswordPolicyIdField.Equals(value) != true)) {
                    this.PasswordPolicyIdField = value;
                    this.RaisePropertyChanged("PasswordPolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RE_Rules {
            get {
                return this.RE_RulesField;
            }
            set {
                if ((object.ReferenceEquals(this.RE_RulesField, value) != true)) {
                    this.RE_RulesField = value;
                    this.RaisePropertyChanged("RE_Rules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireLowerCase {
            get {
                return this.RequireLowerCaseField;
            }
            set {
                if ((this.RequireLowerCaseField.Equals(value) != true)) {
                    this.RequireLowerCaseField = value;
                    this.RaisePropertyChanged("RequireLowerCase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireNumber {
            get {
                return this.RequireNumberField;
            }
            set {
                if ((this.RequireNumberField.Equals(value) != true)) {
                    this.RequireNumberField = value;
                    this.RaisePropertyChanged("RequireNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequirePasswordChange {
            get {
                return this.RequirePasswordChangeField;
            }
            set {
                if ((this.RequirePasswordChangeField.Equals(value) != true)) {
                    this.RequirePasswordChangeField = value;
                    this.RaisePropertyChanged("RequirePasswordChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireUpperCase {
            get {
                return this.RequireUpperCaseField;
            }
            set {
                if ((this.RequireUpperCaseField.Equals(value) != true)) {
                    this.RequireUpperCaseField = value;
                    this.RaisePropertyChanged("RequireUpperCase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCompanySettings", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class UserCompanySettings : Web.ServiceReference1.Settings {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DefaultdDashboard2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.Role UserRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminAccess {
            get {
                return this.AdminAccessField;
            }
            set {
                if ((this.AdminAccessField.Equals(value) != true)) {
                    this.AdminAccessField = value;
                    this.RaisePropertyChanged("AdminAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactCompanyId {
            get {
                return this.ContactCompanyIdField;
            }
            set {
                if ((this.ContactCompanyIdField.Equals(value) != true)) {
                    this.ContactCompanyIdField = value;
                    this.RaisePropertyChanged("ContactCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DefaultdDashboard2Id {
            get {
                return this.DefaultdDashboard2IdField;
            }
            set {
                if ((this.DefaultdDashboard2IdField.Equals(value) != true)) {
                    this.DefaultdDashboard2IdField = value;
                    this.RaisePropertyChanged("DefaultdDashboard2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortPosition {
            get {
                return this.SortPositionField;
            }
            set {
                if ((this.SortPositionField.Equals(value) != true)) {
                    this.SortPositionField = value;
                    this.RaisePropertyChanged("SortPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.Role UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settings", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Web.ServiceReference1.UserCompanySettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Web.ServiceReference1.CompanySettings))]
    public partial class Settings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.DateFormat DateTimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.Language LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.TimeFormat TimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.TimeZoneInformation TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.DateFormat DateTimeFormat {
            get {
                return this.DateTimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeFormatField, value) != true)) {
                    this.DateTimeFormatField = value;
                    this.RaisePropertyChanged("DateTimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.Language Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.TimeFormat TimeFormat {
            get {
                return this.TimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFormatField, value) != true)) {
                    this.TimeFormatField = value;
                    this.RaisePropertyChanged("TimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.TimeZoneInformation TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateFormat", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class DateFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DateFormatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateFormatTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DateFormatId {
            get {
                return this.DateFormatIdField;
            }
            set {
                if ((this.DateFormatIdField.Equals(value) != true)) {
                    this.DateFormatIdField = value;
                    this.RaisePropertyChanged("DateFormatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormatText {
            get {
                return this.DateFormatTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DateFormatTextField, value) != true)) {
                    this.DateFormatTextField = value;
                    this.RaisePropertyChanged("DateFormatText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.Core.Library.Globalization")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CkEditorLangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CldrLangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryLanguageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CkEditorLang {
            get {
                return this.CkEditorLangField;
            }
            set {
                if ((object.ReferenceEquals(this.CkEditorLangField, value) != true)) {
                    this.CkEditorLangField = value;
                    this.RaisePropertyChanged("CkEditorLang");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CldrLang {
            get {
                return this.CldrLangField;
            }
            set {
                if ((object.ReferenceEquals(this.CldrLangField, value) != true)) {
                    this.CldrLangField = value;
                    this.RaisePropertyChanged("CldrLang");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayValue {
            get {
                return this.DisplayValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayValueField, value) != true)) {
                    this.DisplayValueField = value;
                    this.RaisePropertyChanged("DisplayValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryLanguage {
            get {
                return this.PrimaryLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryLanguageField, value) != true)) {
                    this.PrimaryLanguageField = value;
                    this.RaisePropertyChanged("PrimaryLanguage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeFormat", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class TimeFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeFormatTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeFormatText {
            get {
                return this.TimeFormatTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFormatTextField, value) != true)) {
                    this.TimeFormatTextField = value;
                    this.RaisePropertyChanged("TimeFormatText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeZoneInformation", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class TimeZoneInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseUtcOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StandardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SupportDaylightSavingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeZoneIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseUtcOffset {
            get {
                return this.BaseUtcOffsetField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseUtcOffsetField, value) != true)) {
                    this.BaseUtcOffsetField = value;
                    this.RaisePropertyChanged("BaseUtcOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StandardName {
            get {
                return this.StandardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StandardNameField, value) != true)) {
                    this.StandardNameField = value;
                    this.RaisePropertyChanged("StandardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SupportDaylightSavingTime {
            get {
                return this.SupportDaylightSavingTimeField;
            }
            set {
                if ((this.SupportDaylightSavingTimeField.Equals(value) != true)) {
                    this.SupportDaylightSavingTimeField = value;
                    this.RaisePropertyChanged("SupportDaylightSavingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeZoneId {
            get {
                return this.TimeZoneIdField;
            }
            set {
                if ((this.TimeZoneIdField.Equals(value) != true)) {
                    this.TimeZoneIdField = value;
                    this.RaisePropertyChanged("TimeZoneId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeaderTheme", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class HeaderTheme : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.HeaderBackgroundType BackgroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HighlightColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.HeaderBackgroundType Background {
            get {
                return this.BackgroundField;
            }
            set {
                if ((this.BackgroundField.Equals(value) != true)) {
                    this.BackgroundField = value;
                    this.RaisePropertyChanged("Background");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HighlightColor {
            get {
                return this.HighlightColorField;
            }
            set {
                if ((object.ReferenceEquals(this.HighlightColorField, value) != true)) {
                    this.HighlightColorField = value;
                    this.RaisePropertyChanged("HighlightColor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPAddressRange", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class IPAddressRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EndIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SSOCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EndIp {
            get {
                return this.EndIpField;
            }
            set {
                if ((this.EndIpField.Equals(value) != true)) {
                    this.EndIpField = value;
                    this.RaisePropertyChanged("EndIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SSOCompanyId {
            get {
                return this.SSOCompanyIdField;
            }
            set {
                if ((this.SSOCompanyIdField.Equals(value) != true)) {
                    this.SSOCompanyIdField = value;
                    this.RaisePropertyChanged("SSOCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartIp {
            get {
                return this.StartIpField;
            }
            set {
                if ((this.StartIpField.Equals(value) != true)) {
                    this.StartIpField = value;
                    this.RaisePropertyChanged("StartIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.ASPermissions[] ActiveSurveyPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AsSecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalsSecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CVoicePermissions[] CustomerPulsePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CVoicePermissions[] CustomerVoicePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultSurveyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EalsSecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.EVoicePermissions[] EmployeePulsePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.EVoicePermissions[] EmployeeVoicePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] Engage7PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InqSecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PalsSecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.PVoicePermissions[] PartnerVoicePermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.SurveyPermissionsEnum[] SurveyPermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.ASPermissions[] ActiveSurveyPermissions {
            get {
                return this.ActiveSurveyPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveSurveyPermissionsField, value) != true)) {
                    this.ActiveSurveyPermissionsField = value;
                    this.RaisePropertyChanged("ActiveSurveyPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AsSecurityLevel {
            get {
                return this.AsSecurityLevelField;
            }
            set {
                if ((this.AsSecurityLevelField.Equals(value) != true)) {
                    this.AsSecurityLevelField = value;
                    this.RaisePropertyChanged("AsSecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalsSecurityLevel {
            get {
                return this.CalsSecurityLevelField;
            }
            set {
                if ((this.CalsSecurityLevelField.Equals(value) != true)) {
                    this.CalsSecurityLevelField = value;
                    this.RaisePropertyChanged("CalsSecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CVoicePermissions[] CustomerPulsePermission {
            get {
                return this.CustomerPulsePermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPulsePermissionField, value) != true)) {
                    this.CustomerPulsePermissionField = value;
                    this.RaisePropertyChanged("CustomerPulsePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CVoicePermissions[] CustomerVoicePermission {
            get {
                return this.CustomerVoicePermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerVoicePermissionField, value) != true)) {
                    this.CustomerVoicePermissionField = value;
                    this.RaisePropertyChanged("CustomerVoicePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultSurveyId {
            get {
                return this.DefaultSurveyIdField;
            }
            set {
                if ((this.DefaultSurveyIdField.Equals(value) != true)) {
                    this.DefaultSurveyIdField = value;
                    this.RaisePropertyChanged("DefaultSurveyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EalsSecurityLevel {
            get {
                return this.EalsSecurityLevelField;
            }
            set {
                if ((this.EalsSecurityLevelField.Equals(value) != true)) {
                    this.EalsSecurityLevelField = value;
                    this.RaisePropertyChanged("EalsSecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.EVoicePermissions[] EmployeePulsePermission {
            get {
                return this.EmployeePulsePermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePulsePermissionField, value) != true)) {
                    this.EmployeePulsePermissionField = value;
                    this.RaisePropertyChanged("EmployeePulsePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.EVoicePermissions[] EmployeeVoicePermission {
            get {
                return this.EmployeeVoicePermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeVoicePermissionField, value) != true)) {
                    this.EmployeeVoicePermissionField = value;
                    this.RaisePropertyChanged("EmployeeVoicePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Engage7Permissions {
            get {
                return this.Engage7PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.Engage7PermissionsField, value) != true)) {
                    this.Engage7PermissionsField = value;
                    this.RaisePropertyChanged("Engage7Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InqSecurityLevel {
            get {
                return this.InqSecurityLevelField;
            }
            set {
                if ((this.InqSecurityLevelField.Equals(value) != true)) {
                    this.InqSecurityLevelField = value;
                    this.RaisePropertyChanged("InqSecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PalsSecurityLevel {
            get {
                return this.PalsSecurityLevelField;
            }
            set {
                if ((this.PalsSecurityLevelField.Equals(value) != true)) {
                    this.PalsSecurityLevelField = value;
                    this.RaisePropertyChanged("PalsSecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.PVoicePermissions[] PartnerVoicePermission {
            get {
                return this.PartnerVoicePermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerVoicePermissionField, value) != true)) {
                    this.PartnerVoicePermissionField = value;
                    this.RaisePropertyChanged("PartnerVoicePermission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.SurveyPermissionsEnum[] SurveyPermissions {
            get {
                return this.SurveyPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SurveyPermissionsField, value) != true)) {
                    this.SurveyPermissionsField = value;
                    this.RaisePropertyChanged("SurveyPermissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ASPermissions", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum ASPermissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateSurvey = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CVoicePermissions", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum CVoicePermissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DialogueManager = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportManager = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeedbackTools = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delegation = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reclassify = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalRegarding = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportsComments = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerPulse = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceReportes = 1024,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EVoicePermissions", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum EVoicePermissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MyFeedback = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delegation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DialogueManager = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportManager = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePulse = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeedbackTools = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reclassify = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalRegarding = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportComments = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceReports = 1024,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVoicePermissions", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum PVoicePermissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delegation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DilogueManager = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportManager = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeedbackTools = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reclassify = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalRegarding = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportComments = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvanceReports = 128,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SurveyPermissionsEnum", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum SurveyPermissionsEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteAdministrator = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurveyAdministrator = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Analyst = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Respondent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictResponseDetailView = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMSAdministrator = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SocialMediaAdministrator = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SocialMediaUser = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reviewer = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAdministrator = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMMSharedQuestionUser = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMMSharedQuestionAdministrator = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancedAnalyst = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgStructureAdministrator = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvitationReportViewer = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BasicUser = 32768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancedUser = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurveyManager = 131072,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextMiningAdministrator = 262144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextMiningViewer = 524288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMiningViewer = 1048576,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BonfireSurveyAdministrator = 2097152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReaderUser = 4194304,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignInAsUser = 8388608,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublishToCompany = 16777216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateNewTheme = 33554432,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShareThemeWithCompany = 67108864,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseManagement = 134217728,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InviteReminderTemplate = 268435456,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyOptOuts = 536870912,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowResponseList = 1073741824,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeaderBackgroundType", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.EntityManagement.Constants")]
    public enum HeaderBackgroundType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Light = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dark = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.AllegianceFeatureFlags", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.Core.Library.Enumerations")]
    public enum EnumsAllegianceFeatureFlags : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerVoice = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeVoice = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerVoice = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignInAsAnother = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActiveSurvey = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowReaderUsers = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoundedNPS = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerPulse = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeePulse = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuotaManagement = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesforceIntegration = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResponseViewUnanswered = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Engage8Header = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActionBoard = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllegiancePlatform = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InquisitePlatform = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnPremises = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMS = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SocialMedia = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextMining = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuadChart = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomReports = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResponseList = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableBonfireForAllUsers = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalizedDateFormat = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActionPlanning = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrgStructure = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomFields = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alerts = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvitationManagement = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WordCloud = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplexAnalystFilters = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastNPSCustomField = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShareMyReports = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduledImports = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllegianceAuthentication = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HierarchyPreProcessing = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResponseListCSVExport = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextQuestionTools = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowTypeAheadFiltering = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalDeploymentCalendar = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMining = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendInvitationWizard = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoftwareGlobalization = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduledReportsEmailNonAllegiance = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RespondentSummary = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResponseReOpenAsCopy = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dashboards2 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduledMyReports = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerExtensibility = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadDesktopBuilder = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BonfireFileUploadQuestion = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurveyLibrary = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseManagement = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalFatigueManagement = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutomatedEmailListUpload = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowAllegianceSurveysInSurveyLibrary = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightedCustomField = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuestionLibrary = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BonfireLogicReport = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BonfireTableAnswerDisplayLogic = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tableau = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Adobe = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Marketo = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DynamicLanguageContent = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableChartExport = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForresterCxIndex = 69,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseGenericStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseGenericStatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseView caseViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool messagingEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewValues viewValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseView caseView {
            get {
                return this.caseViewField;
            }
            set {
                if ((object.ReferenceEquals(this.caseViewField, value) != true)) {
                    this.caseViewField = value;
                    this.RaisePropertyChanged("caseView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool messagingEnabled {
            get {
                return this.messagingEnabledField;
            }
            set {
                if ((this.messagingEnabledField.Equals(value) != true)) {
                    this.messagingEnabledField = value;
                    this.RaisePropertyChanged("messagingEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewValues viewValues {
            get {
                return this.viewValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.viewValuesField, value) != true)) {
                    this.viewValuesField = value;
                    this.RaisePropertyChanged("viewValues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseView", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseView : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseCanvasSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CaseStatusIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewItem[] CaseViewItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ClosingStatusIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActionPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseCanvasSettings {
            get {
                return this.CaseCanvasSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseCanvasSettingsField, value) != true)) {
                    this.CaseCanvasSettingsField = value;
                    this.RaisePropertyChanged("CaseCanvasSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CaseStatusIds {
            get {
                return this.CaseStatusIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseStatusIdsField, value) != true)) {
                    this.CaseStatusIdsField = value;
                    this.RaisePropertyChanged("CaseStatusIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewItem[] CaseViewItems {
            get {
                return this.CaseViewItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseViewItemsField, value) != true)) {
                    this.CaseViewItemsField = value;
                    this.RaisePropertyChanged("CaseViewItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ClosingStatusIds {
            get {
                return this.ClosingStatusIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingStatusIdsField, value) != true)) {
                    this.ClosingStatusIdsField = value;
                    this.RaisePropertyChanged("ClosingStatusIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActionPlan {
            get {
                return this.IsActionPlanField;
            }
            set {
                if ((this.IsActionPlanField.Equals(value) != true)) {
                    this.IsActionPlanField = value;
                    this.RaisePropertyChanged("IsActionPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewStatusId {
            get {
                return this.NewStatusIdField;
            }
            set {
                if ((this.NewStatusIdField.Equals(value) != true)) {
                    this.NewStatusIdField = value;
                    this.RaisePropertyChanged("NewStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewValues", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseActivityNote[] ActivityNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlertNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasePriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewRootCauseAnswer[] CaseRootCauseAnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CaseRootCauseTreeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseWatcher[] CaseWatchersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CurrentUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateClosedFormattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateSubmittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateSubmittedFormattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableCaseReassignmentNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableCaseWatcherNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewItemAnswer[] ItemAnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedDateFormattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OwnerUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespondentHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RespondentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, Web.ServiceReference1.SourceResponse> SourceResponsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> SourceValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SurveyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurveyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeToCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseTimeColor TimeToCloseColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToCloseDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeToCloseDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeToCloseGoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToCloseGoalDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeToCloseGoalDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToCloseGoalHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToCloseHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeToRespondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseTimeColor TimeToRespondColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToRespondDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeToRespondDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeToRespondGoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToRespondGoalDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeToRespondGoalDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToRespondGoalHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeToRespondHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseWatcherType WatcherTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseActivityNote[] ActivityNotes {
            get {
                return this.ActivityNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNotesField, value) != true)) {
                    this.ActivityNotesField = value;
                    this.RaisePropertyChanged("ActivityNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertName {
            get {
                return this.AlertNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertNameField, value) != true)) {
                    this.AlertNameField = value;
                    this.RaisePropertyChanged("AlertName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasePriorityId {
            get {
                return this.CasePriorityIdField;
            }
            set {
                if ((this.CasePriorityIdField.Equals(value) != true)) {
                    this.CasePriorityIdField = value;
                    this.RaisePropertyChanged("CasePriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewRootCauseAnswer[] CaseRootCauseAnswers {
            get {
                return this.CaseRootCauseAnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseRootCauseAnswersField, value) != true)) {
                    this.CaseRootCauseAnswersField = value;
                    this.RaisePropertyChanged("CaseRootCauseAnswers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CaseRootCauseTreeIds {
            get {
                return this.CaseRootCauseTreeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseRootCauseTreeIdsField, value) != true)) {
                    this.CaseRootCauseTreeIdsField = value;
                    this.RaisePropertyChanged("CaseRootCauseTreeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseStatusId {
            get {
                return this.CaseStatusIdField;
            }
            set {
                if ((this.CaseStatusIdField.Equals(value) != true)) {
                    this.CaseStatusIdField = value;
                    this.RaisePropertyChanged("CaseStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseWatcher[] CaseWatchers {
            get {
                return this.CaseWatchersField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseWatchersField, value) != true)) {
                    this.CaseWatchersField = value;
                    this.RaisePropertyChanged("CaseWatchers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CurrentUserId {
            get {
                return this.CurrentUserIdField;
            }
            set {
                if ((this.CurrentUserIdField.Equals(value) != true)) {
                    this.CurrentUserIdField = value;
                    this.RaisePropertyChanged("CurrentUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateClosed {
            get {
                return this.DateClosedField;
            }
            set {
                if ((this.DateClosedField.Equals(value) != true)) {
                    this.DateClosedField = value;
                    this.RaisePropertyChanged("DateClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateClosedFormatted {
            get {
                return this.DateClosedFormattedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateClosedFormattedField, value) != true)) {
                    this.DateClosedFormattedField = value;
                    this.RaisePropertyChanged("DateClosedFormatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateSubmitted {
            get {
                return this.DateSubmittedField;
            }
            set {
                if ((this.DateSubmittedField.Equals(value) != true)) {
                    this.DateSubmittedField = value;
                    this.RaisePropertyChanged("DateSubmitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateSubmittedFormatted {
            get {
                return this.DateSubmittedFormattedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateSubmittedFormattedField, value) != true)) {
                    this.DateSubmittedFormattedField = value;
                    this.RaisePropertyChanged("DateSubmittedFormatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableCaseReassignmentNotifications {
            get {
                return this.DisableCaseReassignmentNotificationsField;
            }
            set {
                if ((this.DisableCaseReassignmentNotificationsField.Equals(value) != true)) {
                    this.DisableCaseReassignmentNotificationsField = value;
                    this.RaisePropertyChanged("DisableCaseReassignmentNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableCaseWatcherNotifications {
            get {
                return this.DisableCaseWatcherNotificationsField;
            }
            set {
                if ((this.DisableCaseWatcherNotificationsField.Equals(value) != true)) {
                    this.DisableCaseWatcherNotificationsField = value;
                    this.RaisePropertyChanged("DisableCaseWatcherNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewItemAnswer[] ItemAnswers {
            get {
                return this.ItemAnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemAnswersField, value) != true)) {
                    this.ItemAnswersField = value;
                    this.RaisePropertyChanged("ItemAnswers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedDateFormatted {
            get {
                return this.ModifiedDateFormattedField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedDateFormattedField, value) != true)) {
                    this.ModifiedDateFormattedField = value;
                    this.RaisePropertyChanged("ModifiedDateFormatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerFullName {
            get {
                return this.OwnerFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerFullNameField, value) != true)) {
                    this.OwnerFullNameField = value;
                    this.RaisePropertyChanged("OwnerFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OwnerUserId {
            get {
                return this.OwnerUserIdField;
            }
            set {
                if ((this.OwnerUserIdField.Equals(value) != true)) {
                    this.OwnerUserIdField = value;
                    this.RaisePropertyChanged("OwnerUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespondentHash {
            get {
                return this.RespondentHashField;
            }
            set {
                if ((object.ReferenceEquals(this.RespondentHashField, value) != true)) {
                    this.RespondentHashField = value;
                    this.RaisePropertyChanged("RespondentHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RespondentId {
            get {
                return this.RespondentIdField;
            }
            set {
                if ((this.RespondentIdField.Equals(value) != true)) {
                    this.RespondentIdField = value;
                    this.RaisePropertyChanged("RespondentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Web.ServiceReference1.SourceResponse> SourceResponses {
            get {
                return this.SourceResponsesField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceResponsesField, value) != true)) {
                    this.SourceResponsesField = value;
                    this.RaisePropertyChanged("SourceResponses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> SourceValues {
            get {
                return this.SourceValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceValuesField, value) != true)) {
                    this.SourceValuesField = value;
                    this.RaisePropertyChanged("SourceValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SurveyId {
            get {
                return this.SurveyIdField;
            }
            set {
                if ((this.SurveyIdField.Equals(value) != true)) {
                    this.SurveyIdField = value;
                    this.RaisePropertyChanged("SurveyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SurveyName {
            get {
                return this.SurveyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurveyNameField, value) != true)) {
                    this.SurveyNameField = value;
                    this.RaisePropertyChanged("SurveyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeToClose {
            get {
                return this.TimeToCloseField;
            }
            set {
                if ((this.TimeToCloseField.Equals(value) != true)) {
                    this.TimeToCloseField = value;
                    this.RaisePropertyChanged("TimeToClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseTimeColor TimeToCloseColor {
            get {
                return this.TimeToCloseColorField;
            }
            set {
                if ((this.TimeToCloseColorField.Equals(value) != true)) {
                    this.TimeToCloseColorField = value;
                    this.RaisePropertyChanged("TimeToCloseColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToCloseDays {
            get {
                return this.TimeToCloseDaysField;
            }
            set {
                if ((this.TimeToCloseDaysField.Equals(value) != true)) {
                    this.TimeToCloseDaysField = value;
                    this.RaisePropertyChanged("TimeToCloseDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeToCloseDisplay {
            get {
                return this.TimeToCloseDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeToCloseDisplayField, value) != true)) {
                    this.TimeToCloseDisplayField = value;
                    this.RaisePropertyChanged("TimeToCloseDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeToCloseGoal {
            get {
                return this.TimeToCloseGoalField;
            }
            set {
                if ((this.TimeToCloseGoalField.Equals(value) != true)) {
                    this.TimeToCloseGoalField = value;
                    this.RaisePropertyChanged("TimeToCloseGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToCloseGoalDays {
            get {
                return this.TimeToCloseGoalDaysField;
            }
            set {
                if ((this.TimeToCloseGoalDaysField.Equals(value) != true)) {
                    this.TimeToCloseGoalDaysField = value;
                    this.RaisePropertyChanged("TimeToCloseGoalDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeToCloseGoalDisplay {
            get {
                return this.TimeToCloseGoalDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeToCloseGoalDisplayField, value) != true)) {
                    this.TimeToCloseGoalDisplayField = value;
                    this.RaisePropertyChanged("TimeToCloseGoalDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToCloseGoalHours {
            get {
                return this.TimeToCloseGoalHoursField;
            }
            set {
                if ((this.TimeToCloseGoalHoursField.Equals(value) != true)) {
                    this.TimeToCloseGoalHoursField = value;
                    this.RaisePropertyChanged("TimeToCloseGoalHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToCloseHours {
            get {
                return this.TimeToCloseHoursField;
            }
            set {
                if ((this.TimeToCloseHoursField.Equals(value) != true)) {
                    this.TimeToCloseHoursField = value;
                    this.RaisePropertyChanged("TimeToCloseHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeToRespond {
            get {
                return this.TimeToRespondField;
            }
            set {
                if ((this.TimeToRespondField.Equals(value) != true)) {
                    this.TimeToRespondField = value;
                    this.RaisePropertyChanged("TimeToRespond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseTimeColor TimeToRespondColor {
            get {
                return this.TimeToRespondColorField;
            }
            set {
                if ((this.TimeToRespondColorField.Equals(value) != true)) {
                    this.TimeToRespondColorField = value;
                    this.RaisePropertyChanged("TimeToRespondColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToRespondDays {
            get {
                return this.TimeToRespondDaysField;
            }
            set {
                if ((this.TimeToRespondDaysField.Equals(value) != true)) {
                    this.TimeToRespondDaysField = value;
                    this.RaisePropertyChanged("TimeToRespondDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeToRespondDisplay {
            get {
                return this.TimeToRespondDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeToRespondDisplayField, value) != true)) {
                    this.TimeToRespondDisplayField = value;
                    this.RaisePropertyChanged("TimeToRespondDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeToRespondGoal {
            get {
                return this.TimeToRespondGoalField;
            }
            set {
                if ((this.TimeToRespondGoalField.Equals(value) != true)) {
                    this.TimeToRespondGoalField = value;
                    this.RaisePropertyChanged("TimeToRespondGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToRespondGoalDays {
            get {
                return this.TimeToRespondGoalDaysField;
            }
            set {
                if ((this.TimeToRespondGoalDaysField.Equals(value) != true)) {
                    this.TimeToRespondGoalDaysField = value;
                    this.RaisePropertyChanged("TimeToRespondGoalDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeToRespondGoalDisplay {
            get {
                return this.TimeToRespondGoalDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeToRespondGoalDisplayField, value) != true)) {
                    this.TimeToRespondGoalDisplayField = value;
                    this.RaisePropertyChanged("TimeToRespondGoalDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToRespondGoalHours {
            get {
                return this.TimeToRespondGoalHoursField;
            }
            set {
                if ((this.TimeToRespondGoalHoursField.Equals(value) != true)) {
                    this.TimeToRespondGoalHoursField = value;
                    this.RaisePropertyChanged("TimeToRespondGoalHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeToRespondHours {
            get {
                return this.TimeToRespondHoursField;
            }
            set {
                if ((this.TimeToRespondHoursField.Equals(value) != true)) {
                    this.TimeToRespondHoursField = value;
                    this.RaisePropertyChanged("TimeToRespondHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseWatcherType WatcherType {
            get {
                return this.WatcherTypeField;
            }
            set {
                if ((this.WatcherTypeField.Equals(value) != true)) {
                    this.WatcherTypeField = value;
                    this.RaisePropertyChanged("WatcherType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewItem", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseItemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseQuestionType CaseQuestionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewListItem[] DropdownValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NeededToCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseViewRootCause[] RootCauseValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceScaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isGroupParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mobileIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long parentItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool showTimeFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseItemId {
            get {
                return this.CaseItemIdField;
            }
            set {
                if ((this.CaseItemIdField.Equals(value) != true)) {
                    this.CaseItemIdField = value;
                    this.RaisePropertyChanged("CaseItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseItemText {
            get {
                return this.CaseItemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseItemTextField, value) != true)) {
                    this.CaseItemTextField = value;
                    this.RaisePropertyChanged("CaseItemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseProgramId {
            get {
                return this.CaseProgramIdField;
            }
            set {
                if ((this.CaseProgramIdField.Equals(value) != true)) {
                    this.CaseProgramIdField = value;
                    this.RaisePropertyChanged("CaseProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseQuestionType CaseQuestionTypeId {
            get {
                return this.CaseQuestionTypeIdField;
            }
            set {
                if ((this.CaseQuestionTypeIdField.Equals(value) != true)) {
                    this.CaseQuestionTypeIdField = value;
                    this.RaisePropertyChanged("CaseQuestionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewListItem[] DropdownValues {
            get {
                return this.DropdownValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.DropdownValuesField, value) != true)) {
                    this.DropdownValuesField = value;
                    this.RaisePropertyChanged("DropdownValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormatString {
            get {
                return this.FormatStringField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatStringField, value) != true)) {
                    this.FormatStringField = value;
                    this.RaisePropertyChanged("FormatString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailAddress {
            get {
                return this.IsEmailAddressField;
            }
            set {
                if ((this.IsEmailAddressField.Equals(value) != true)) {
                    this.IsEmailAddressField = value;
                    this.RaisePropertyChanged("IsEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPhoneNumber {
            get {
                return this.IsPhoneNumberField;
            }
            set {
                if ((this.IsPhoneNumberField.Equals(value) != true)) {
                    this.IsPhoneNumberField = value;
                    this.RaisePropertyChanged("IsPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeededToClose {
            get {
                return this.NeededToCloseField;
            }
            set {
                if ((this.NeededToCloseField.Equals(value) != true)) {
                    this.NeededToCloseField = value;
                    this.RaisePropertyChanged("NeededToClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceKey {
            get {
                return this.ResourceKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceKeyField, value) != true)) {
                    this.ResourceKeyField = value;
                    this.RaisePropertyChanged("ResourceKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseViewRootCause[] RootCauseValues {
            get {
                return this.RootCauseValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.RootCauseValuesField, value) != true)) {
                    this.RootCauseValuesField = value;
                    this.RaisePropertyChanged("RootCauseValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceScaleId {
            get {
                return this.SourceScaleIdField;
            }
            set {
                if ((this.SourceScaleIdField.Equals(value) != true)) {
                    this.SourceScaleIdField = value;
                    this.RaisePropertyChanged("SourceScaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isGroupParent {
            get {
                return this.isGroupParentField;
            }
            set {
                if ((this.isGroupParentField.Equals(value) != true)) {
                    this.isGroupParentField = value;
                    this.RaisePropertyChanged("isGroupParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mobileIndex {
            get {
                return this.mobileIndexField;
            }
            set {
                if ((this.mobileIndexField.Equals(value) != true)) {
                    this.mobileIndexField = value;
                    this.RaisePropertyChanged("mobileIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parentItemID {
            get {
                return this.parentItemIDField;
            }
            set {
                if ((this.parentItemIDField.Equals(value) != true)) {
                    this.parentItemIDField = value;
                    this.RaisePropertyChanged("parentItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool showTimeField {
            get {
                return this.showTimeFieldField;
            }
            set {
                if ((this.showTimeFieldField.Equals(value) != true)) {
                    this.showTimeFieldField = value;
                    this.RaisePropertyChanged("showTimeField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManagementEnums.CaseQuestionType", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.Library" +
        "")]
    public enum CaseManagementEnumsCaseQuestionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseId = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubmittedDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Status = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RootCause = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseOwner = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlertType = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortText = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LongText = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dropdown = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkbox = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Source = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosedDate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurveyName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeToRespond = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeToClose = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paragraph = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Divider = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CcWatcher = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Escalated = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SurveyNameDuplicate = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModifiedDate = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatePicker = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Numeric = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MessageCount = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewListItem", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalizedLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalizedLabel {
            get {
                return this.LocalizedLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalizedLabelField, value) != true)) {
                    this.LocalizedLabelField = value;
                    this.RaisePropertyChanged("LocalizedLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewRootCause", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewRootCause : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowOtherNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseRootCauseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentTreeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootCauseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowOtherNode {
            get {
                return this.AllowOtherNodeField;
            }
            set {
                if ((this.AllowOtherNodeField.Equals(value) != true)) {
                    this.AllowOtherNodeField = value;
                    this.RaisePropertyChanged("AllowOtherNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseItemId {
            get {
                return this.CaseItemIdField;
            }
            set {
                if ((this.CaseItemIdField.Equals(value) != true)) {
                    this.CaseItemIdField = value;
                    this.RaisePropertyChanged("CaseItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseRootCauseId {
            get {
                return this.CaseRootCauseIdField;
            }
            set {
                if ((this.CaseRootCauseIdField.Equals(value) != true)) {
                    this.CaseRootCauseIdField = value;
                    this.RaisePropertyChanged("CaseRootCauseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentTreeId {
            get {
                return this.ParentTreeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentTreeIdField, value) != true)) {
                    this.ParentTreeIdField = value;
                    this.RaisePropertyChanged("ParentTreeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootCauseName {
            get {
                return this.RootCauseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RootCauseNameField, value) != true)) {
                    this.RootCauseNameField = value;
                    this.RaisePropertyChanged("RootCauseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeId {
            get {
                return this.TreeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeIdField, value) != true)) {
                    this.TreeIdField = value;
                    this.RaisePropertyChanged("TreeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseActivityNote", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseActivityNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivityNoteDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseActivityNoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseActivityNoteFile NoteFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityNote {
            get {
                return this.ActivityNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNoteField, value) != true)) {
                    this.ActivityNoteField = value;
                    this.RaisePropertyChanged("ActivityNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivityNoteDate {
            get {
                return this.ActivityNoteDateField;
            }
            set {
                if ((this.ActivityNoteDateField.Equals(value) != true)) {
                    this.ActivityNoteDateField = value;
                    this.RaisePropertyChanged("ActivityNoteDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseActivityNoteId {
            get {
                return this.CaseActivityNoteIdField;
            }
            set {
                if ((this.CaseActivityNoteIdField.Equals(value) != true)) {
                    this.CaseActivityNoteIdField = value;
                    this.RaisePropertyChanged("CaseActivityNoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HashCode {
            get {
                return this.HashCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HashCodeField, value) != true)) {
                    this.HashCodeField = value;
                    this.RaisePropertyChanged("HashCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseActivityNoteFile NoteFile {
            get {
                return this.NoteFileField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteFileField, value) != true)) {
                    this.NoteFileField = value;
                    this.RaisePropertyChanged("NoteFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewRootCauseAnswer", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewRootCauseAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseRootCauseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseItemId {
            get {
                return this.CaseItemIdField;
            }
            set {
                if ((this.CaseItemIdField.Equals(value) != true)) {
                    this.CaseItemIdField = value;
                    this.RaisePropertyChanged("CaseItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseRootCauseId {
            get {
                return this.CaseRootCauseIdField;
            }
            set {
                if ((this.CaseRootCauseIdField.Equals(value) != true)) {
                    this.CaseRootCauseIdField = value;
                    this.RaisePropertyChanged("CaseRootCauseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeId {
            get {
                return this.TreeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeIdField, value) != true)) {
                    this.TreeIdField = value;
                    this.RaisePropertyChanged("TreeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseWatcher", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseWatcher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseWatcherType AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseWatcherType Access {
            get {
                return this.AccessField;
            }
            set {
                if ((this.AccessField.Equals(value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewItemAnswer", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseViewItemAnswer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseItemAnswerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseQuestionType CaseQuestionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DoubleValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseItemAnswerId {
            get {
                return this.CaseItemAnswerIdField;
            }
            set {
                if ((this.CaseItemAnswerIdField.Equals(value) != true)) {
                    this.CaseItemAnswerIdField = value;
                    this.RaisePropertyChanged("CaseItemAnswerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseItemId {
            get {
                return this.CaseItemIdField;
            }
            set {
                if ((this.CaseItemIdField.Equals(value) != true)) {
                    this.CaseItemIdField = value;
                    this.RaisePropertyChanged("CaseItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseQuestionType CaseQuestionTypeId {
            get {
                return this.CaseQuestionTypeIdField;
            }
            set {
                if ((this.CaseQuestionTypeIdField.Equals(value) != true)) {
                    this.CaseQuestionTypeIdField = value;
                    this.RaisePropertyChanged("CaseQuestionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DoubleValue {
            get {
                return this.DoubleValueField;
            }
            set {
                if ((this.DoubleValueField.Equals(value) != true)) {
                    this.DoubleValueField = value;
                    this.RaisePropertyChanged("DoubleValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmpty {
            get {
                return this.IsEmptyField;
            }
            set {
                if ((this.IsEmptyField.Equals(value) != true)) {
                    this.IsEmptyField = value;
                    this.RaisePropertyChanged("IsEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextValue {
            get {
                return this.TextValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TextValueField, value) != true)) {
                    this.TextValueField = value;
                    this.RaisePropertyChanged("TextValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeValue {
            get {
                return this.TimeValueField;
            }
            set {
                if ((this.TimeValueField.Equals(value) != true)) {
                    this.TimeValueField = value;
                    this.RaisePropertyChanged("TimeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class SourceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsDataDefinitionDisplayType DisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnswerText {
            get {
                return this.AnswerTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerTextField, value) != true)) {
                    this.AnswerTextField = value;
                    this.RaisePropertyChanged("AnswerText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsDataDefinitionDisplayType DisplayType {
            get {
                return this.DisplayTypeField;
            }
            set {
                if ((this.DisplayTypeField.Equals(value) != true)) {
                    this.DisplayTypeField = value;
                    this.RaisePropertyChanged("DisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionText {
            get {
                return this.QuestionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionTextField, value) != true)) {
                    this.QuestionTextField = value;
                    this.RaisePropertyChanged("QuestionText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManagementEnums.CaseTimeColor", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.Library" +
        "")]
    public enum CaseManagementEnumsCaseTimeColor : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yellow = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Green = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManagementEnums.CaseWatcherType", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.Library" +
        "")]
    public enum CaseManagementEnumsCaseWatcherType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullAccess = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitedAccess = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseActivityNoteFile", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseActivityNoteFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseActivityNoteFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseActivityNoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncryptedParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameOnDiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseActivityNoteFileId {
            get {
                return this.CaseActivityNoteFileIdField;
            }
            set {
                if ((this.CaseActivityNoteFileIdField.Equals(value) != true)) {
                    this.CaseActivityNoteFileIdField = value;
                    this.RaisePropertyChanged("CaseActivityNoteFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseActivityNoteId {
            get {
                return this.CaseActivityNoteIdField;
            }
            set {
                if ((this.CaseActivityNoteIdField.Equals(value) != true)) {
                    this.CaseActivityNoteIdField = value;
                    this.RaisePropertyChanged("CaseActivityNoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncryptedParams {
            get {
                return this.EncryptedParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptedParamsField, value) != true)) {
                    this.EncryptedParamsField = value;
                    this.RaisePropertyChanged("EncryptedParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameOnDisk {
            get {
                return this.FileNameOnDiskField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameOnDiskField, value) != true)) {
                    this.FileNameOnDiskField = value;
                    this.RaisePropertyChanged("FileNameOnDisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManagementEnums.DataDefinitionDisplayType", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.Library" +
        "")]
    public enum CaseManagementEnumsDataDefinitionDisplayType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Question = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Answer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnswerWithValue = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuestionWithAnswer = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsertUpdateActivityNoteResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class InsertUpdateActivityNoteResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseActivityNote caseActivityNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseActivityNote caseActivityNote {
            get {
                return this.caseActivityNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.caseActivityNoteField, value) != true)) {
                    this.caseActivityNoteField = value;
                    this.RaisePropertyChanged("caseActivityNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserListResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class UserListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalSearchCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CmUserAccount[] userAccountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalSearchCount {
            get {
                return this.totalSearchCountField;
            }
            set {
                if ((this.totalSearchCountField.Equals(value) != true)) {
                    this.totalSearchCountField = value;
                    this.RaisePropertyChanged("totalSearchCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CmUserAccount[] userAccount {
            get {
                return this.userAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.userAccountField, value) != true)) {
                    this.userAccountField = value;
                    this.RaisePropertyChanged("userAccount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CmUserAccount", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class CmUserAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileInboxData", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class MobileInboxData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMobileInboxData caseMobileInboxDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMobileInboxData caseMobileInboxData {
            get {
                return this.caseMobileInboxDataField;
            }
            set {
                if ((object.ReferenceEquals(this.caseMobileInboxDataField, value) != true)) {
                    this.caseMobileInboxDataField = value;
                    this.RaisePropertyChanged("caseMobileInboxData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMobileInboxData", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMobileInboxData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMobileRowData[] RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNewMessageCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMobileRowData[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNewMessageCount {
            get {
                return this.TotalNewMessageCountField;
            }
            set {
                if ((this.TotalNewMessageCountField.Equals(value) != true)) {
                    this.TotalNewMessageCountField = value;
                    this.RaisePropertyChanged("TotalNewMessageCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMobileRowData", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMobileRowData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMobileColumnData[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActionPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewMessageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RespondentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMobileColumnData[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActionPlan {
            get {
                return this.IsActionPlanField;
            }
            set {
                if ((this.IsActionPlanField.Equals(value) != true)) {
                    this.IsActionPlanField = value;
                    this.RaisePropertyChanged("IsActionPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewMessageCount {
            get {
                return this.NewMessageCountField;
            }
            set {
                if ((this.NewMessageCountField.Equals(value) != true)) {
                    this.NewMessageCountField = value;
                    this.RaisePropertyChanged("NewMessageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RespondentId {
            get {
                return this.RespondentIdField;
            }
            set {
                if ((this.RespondentIdField.Equals(value) != true)) {
                    this.RespondentIdField = value;
                    this.RaisePropertyChanged("RespondentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortIndex {
            get {
                return this.SortIndexField;
            }
            set {
                if ((this.SortIndexField.Equals(value) != true)) {
                    this.SortIndexField = value;
                    this.RaisePropertyChanged("SortIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMobileColumnData", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMobileColumnData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseQuestionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseManagementEnumsCaseTimeColor ColumnColorValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseQuestionTypeId {
            get {
                return this.CaseQuestionTypeIdField;
            }
            set {
                if ((this.CaseQuestionTypeIdField.Equals(value) != true)) {
                    this.CaseQuestionTypeIdField = value;
                    this.RaisePropertyChanged("CaseQuestionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseManagementEnumsCaseTimeColor ColumnColorValue {
            get {
                return this.ColumnColorValueField;
            }
            set {
                if ((this.ColumnColorValueField.Equals(value) != true)) {
                    this.ColumnColorValueField = value;
                    this.RaisePropertyChanged("ColumnColorValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnValue {
            get {
                return this.ColumnValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValueField, value) != true)) {
                    this.ColumnValueField = value;
                    this.RaisePropertyChanged("ColumnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortIndex {
            get {
                return this.SortIndexField;
            }
            set {
                if ((this.SortIndexField.Equals(value) != true)) {
                    this.SortIndexField = value;
                    this.RaisePropertyChanged("SortIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStats", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseStatistics caseStatisticsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseStatistics caseStatistics {
            get {
                return this.caseStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.caseStatisticsField, value) != true)) {
                    this.caseStatisticsField = value;
                    this.RaisePropertyChanged("caseStatistics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseStatistics", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvgResolutionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvgResponseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InProgressCasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewCasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverdueItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvgResolutionTime {
            get {
                return this.AvgResolutionTimeField;
            }
            set {
                if ((this.AvgResolutionTimeField.Equals(value) != true)) {
                    this.AvgResolutionTimeField = value;
                    this.RaisePropertyChanged("AvgResolutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvgResponseTime {
            get {
                return this.AvgResponseTimeField;
            }
            set {
                if ((this.AvgResponseTimeField.Equals(value) != true)) {
                    this.AvgResponseTimeField = value;
                    this.RaisePropertyChanged("AvgResponseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InProgressCases {
            get {
                return this.InProgressCasesField;
            }
            set {
                if ((this.InProgressCasesField.Equals(value) != true)) {
                    this.InProgressCasesField = value;
                    this.RaisePropertyChanged("InProgressCases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewCases {
            get {
                return this.NewCasesField;
            }
            set {
                if ((this.NewCasesField.Equals(value) != true)) {
                    this.NewCasesField = value;
                    this.RaisePropertyChanged("NewCases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverdueItems {
            get {
                return this.OverdueItemsField;
            }
            set {
                if ((this.OverdueItemsField.Equals(value) != true)) {
                    this.OverdueItemsField = value;
                    this.RaisePropertyChanged("OverdueItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseUpdateSessionStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseUpdateSessionStatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime sessionTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime sessionTimeout {
            get {
                return this.sessionTimeoutField;
            }
            set {
                if ((this.sessionTimeoutField.Equals(value) != true)) {
                    this.sessionTimeoutField = value;
                    this.RaisePropertyChanged("sessionTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobileMessageInfo", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class MobileMessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMessageInfo caseMessageInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMessageInfo caseMessageInfo {
            get {
                return this.caseMessageInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.caseMessageInfoField, value) != true)) {
                    this.caseMessageInfoField = value;
                    this.RaisePropertyChanged("caseMessageInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMessageInfo", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCaseMessagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessagingEmployeeIdentificationLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessagingLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PredefineTemplateCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalMessageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNewMessageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseAnonymousNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentUserName {
            get {
                return this.CurrentUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUserNameField, value) != true)) {
                    this.CurrentUserNameField = value;
                    this.RaisePropertyChanged("CurrentUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCaseMessaging {
            get {
                return this.EnableCaseMessagingField;
            }
            set {
                if ((this.EnableCaseMessagingField.Equals(value) != true)) {
                    this.EnableCaseMessagingField = value;
                    this.RaisePropertyChanged("EnableCaseMessaging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageSubject {
            get {
                return this.MessageSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageSubjectField, value) != true)) {
                    this.MessageSubjectField = value;
                    this.RaisePropertyChanged("MessageSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessagingEmployeeIdentificationLabel {
            get {
                return this.MessagingEmployeeIdentificationLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagingEmployeeIdentificationLabelField, value) != true)) {
                    this.MessagingEmployeeIdentificationLabelField = value;
                    this.RaisePropertyChanged("MessagingEmployeeIdentificationLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessagingLabel {
            get {
                return this.MessagingLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagingLabelField, value) != true)) {
                    this.MessagingLabelField = value;
                    this.RaisePropertyChanged("MessagingLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PredefineTemplateCount {
            get {
                return this.PredefineTemplateCountField;
            }
            set {
                if ((this.PredefineTemplateCountField.Equals(value) != true)) {
                    this.PredefineTemplateCountField = value;
                    this.RaisePropertyChanged("PredefineTemplateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalMessageCount {
            get {
                return this.TotalMessageCountField;
            }
            set {
                if ((this.TotalMessageCountField.Equals(value) != true)) {
                    this.TotalMessageCountField = value;
                    this.RaisePropertyChanged("TotalMessageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNewMessageCount {
            get {
                return this.TotalNewMessageCountField;
            }
            set {
                if ((this.TotalNewMessageCountField.Equals(value) != true)) {
                    this.TotalNewMessageCountField = value;
                    this.RaisePropertyChanged("TotalNewMessageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseAnonymousName {
            get {
                return this.UseAnonymousNameField;
            }
            set {
                if ((this.UseAnonymousNameField.Equals(value) != true)) {
                    this.UseAnonymousNameField = value;
                    this.RaisePropertyChanged("UseAnonymousName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string messageInfo {
            get {
                return this.messageInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.messageInfoField, value) != true)) {
                    this.messageInfoField = value;
                    this.RaisePropertyChanged("messageInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMessage", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseMessageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseMessageTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MessageDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDateFormattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CaseMessageFile[] MessageFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessageUnreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordStatusTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((this.CaseIDField.Equals(value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseMessageID {
            get {
                return this.CaseMessageIDField;
            }
            set {
                if ((this.CaseMessageIDField.Equals(value) != true)) {
                    this.CaseMessageIDField = value;
                    this.RaisePropertyChanged("CaseMessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseMessageTypeID {
            get {
                return this.CaseMessageTypeIDField;
            }
            set {
                if ((this.CaseMessageTypeIDField.Equals(value) != true)) {
                    this.CaseMessageTypeIDField = value;
                    this.RaisePropertyChanged("CaseMessageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MessageDate {
            get {
                return this.MessageDateField;
            }
            set {
                if ((this.MessageDateField.Equals(value) != true)) {
                    this.MessageDateField = value;
                    this.RaisePropertyChanged("MessageDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDateFormatted {
            get {
                return this.MessageDateFormattedField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDateFormattedField, value) != true)) {
                    this.MessageDateFormattedField = value;
                    this.RaisePropertyChanged("MessageDateFormatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CaseMessageFile[] MessageFile {
            get {
                return this.MessageFileField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageFileField, value) != true)) {
                    this.MessageFileField = value;
                    this.RaisePropertyChanged("MessageFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MessageUnread {
            get {
                return this.MessageUnreadField;
            }
            set {
                if ((this.MessageUnreadField.Equals(value) != true)) {
                    this.MessageUnreadField = value;
                    this.RaisePropertyChanged("MessageUnread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordStatusTypeID {
            get {
                return this.RecordStatusTypeIDField;
            }
            set {
                if ((this.RecordStatusTypeIDField.Equals(value) != true)) {
                    this.RecordStatusTypeIDField = value;
                    this.RaisePropertyChanged("RecordStatusTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseMessageFile", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseMessageFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseMessageFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CaseMessageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncryptedParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameOnDiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordStatusTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseMessageFileID {
            get {
                return this.CaseMessageFileIDField;
            }
            set {
                if ((this.CaseMessageFileIDField.Equals(value) != true)) {
                    this.CaseMessageFileIDField = value;
                    this.RaisePropertyChanged("CaseMessageFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CaseMessageID {
            get {
                return this.CaseMessageIDField;
            }
            set {
                if ((this.CaseMessageIDField.Equals(value) != true)) {
                    this.CaseMessageIDField = value;
                    this.RaisePropertyChanged("CaseMessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncryptedParams {
            get {
                return this.EncryptedParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptedParamsField, value) != true)) {
                    this.EncryptedParamsField = value;
                    this.RaisePropertyChanged("EncryptedParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameOnDisk {
            get {
                return this.FileNameOnDiskField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameOnDiskField, value) != true)) {
                    this.FileNameOnDiskField = value;
                    this.RaisePropertyChanged("FileNameOnDisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordStatusTypeID {
            get {
                return this.RecordStatusTypeIDField;
            }
            set {
                if ((this.RecordStatusTypeIDField.Equals(value) != true)) {
                    this.RecordStatusTypeIDField = value;
                    this.RaisePropertyChanged("RecordStatusTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MobilePredefinedResponses", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagementAPI.DTO")]
    [System.SerializableAttribute()]
    public partial class MobilePredefinedResponses : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CasePredefinedResponse[] casePredefinedResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalResponseCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CasePredefinedResponse[] casePredefinedResponse {
            get {
                return this.casePredefinedResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.casePredefinedResponseField, value) != true)) {
                    this.casePredefinedResponseField = value;
                    this.RaisePropertyChanged("casePredefinedResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusMessage {
            get {
                return this.statusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.statusMessageField, value) != true)) {
                    this.statusMessageField = value;
                    this.RaisePropertyChanged("statusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalResponseCount {
            get {
                return this.totalResponseCountField;
            }
            set {
                if ((this.totalResponseCountField.Equals(value) != true)) {
                    this.totalResponseCountField = value;
                    this.RaisePropertyChanged("totalResponseCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePredefinedResponse", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePredefinedResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasePredefinedResponseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Web.ServiceReference1.CasePredefinedResponseDefaultAlert[] DefaultAlertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordStatusTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasePredefinedResponseId {
            get {
                return this.CasePredefinedResponseIdField;
            }
            set {
                if ((this.CasePredefinedResponseIdField.Equals(value) != true)) {
                    this.CasePredefinedResponseIdField = value;
                    this.RaisePropertyChanged("CasePredefinedResponseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseProgramId {
            get {
                return this.CaseProgramIdField;
            }
            set {
                if ((this.CaseProgramIdField.Equals(value) != true)) {
                    this.CaseProgramIdField = value;
                    this.RaisePropertyChanged("CaseProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Web.ServiceReference1.CasePredefinedResponseDefaultAlert[] DefaultAlerts {
            get {
                return this.DefaultAlertsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultAlertsField, value) != true)) {
                    this.DefaultAlertsField = value;
                    this.RaisePropertyChanged("DefaultAlerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordStatusTypeId {
            get {
                return this.RecordStatusTypeIdField;
            }
            set {
                if ((this.RecordStatusTypeIdField.Equals(value) != true)) {
                    this.RecordStatusTypeIdField = value;
                    this.RaisePropertyChanged("RecordStatusTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasePredefinedResponseDefaultAlert", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CasePredefinedResponseDefaultAlert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CasePredefinedResponseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseTriggerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTriggerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CasePredefinedResponseId {
            get {
                return this.CasePredefinedResponseIdField;
            }
            set {
                if ((this.CasePredefinedResponseIdField.Equals(value) != true)) {
                    this.CasePredefinedResponseIdField = value;
                    this.RaisePropertyChanged("CasePredefinedResponseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseTriggerId {
            get {
                return this.CaseTriggerIdField;
            }
            set {
                if ((this.CaseTriggerIdField.Equals(value) != true)) {
                    this.CaseTriggerIdField = value;
                    this.RaisePropertyChanged("CaseTriggerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTriggerName {
            get {
                return this.CaseTriggerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTriggerNameField, value) != true)) {
                    this.CaseTriggerNameField = value;
                    this.RaisePropertyChanged("CaseTriggerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManagementEnums.CaseMobileNotificationModeType", Namespace="http://schemas.datacontract.org/2004/07/Allegiance.CaseManagement.Service.Library" +
        "")]
    public enum CaseManagementEnumsCaseMobileNotificationModeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewMessageOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewStatusOnly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothNewMessageAndNewStatus = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICaseManagement")]
    public interface ICaseManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/ServicesCheck", ReplyAction="http://tempuri.org/ICaseManagement/ServicesCheckResponse")]
        string ServicesCheck(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/ServicesCheck", ReplyAction="http://tempuri.org/ICaseManagement/ServicesCheckResponse")]
        System.Threading.Tasks.Task<string> ServicesCheckAsync(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/Authenticate", ReplyAction="http://tempuri.org/ICaseManagement/AuthenticateResponse")]
        Web.ServiceReference1.AuthenticateResponse Authenticate(string userName, string password, string companyName, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/Authenticate", ReplyAction="http://tempuri.org/ICaseManagement/AuthenticateResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.AuthenticateResponse> AuthenticateAsync(string userName, string password, string companyName, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/Logout", ReplyAction="http://tempuri.org/ICaseManagement/LogoutResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/Logout", ReplyAction="http://tempuri.org/ICaseManagement/LogoutResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> LogoutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertUpdateDeviceId", ReplyAction="http://tempuri.org/ICaseManagement/InsertUpdateDeviceIdResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse InsertUpdateDeviceId(string token, string deviceRegistrationToken, int applicationTypeId, int deviceTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertUpdateDeviceId", ReplyAction="http://tempuri.org/ICaseManagement/InsertUpdateDeviceIdResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> InsertUpdateDeviceIdAsync(string token, string deviceRegistrationToken, int applicationTypeId, int deviceTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/RemoveDeviceId", ReplyAction="http://tempuri.org/ICaseManagement/RemoveDeviceIdResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse RemoveDeviceId(string token, string deviceRegistrationToken, int applicationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/RemoveDeviceId", ReplyAction="http://tempuri.org/ICaseManagement/RemoveDeviceIdResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> RemoveDeviceIdAsync(string token, string deviceRegistrationToken, int applicationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetCaseView", ReplyAction="http://tempuri.org/ICaseManagement/GetCaseViewResponse")]
        Web.ServiceReference1.CaseViewResponse GetCaseView(string token, string caseId, bool removeTimeFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetCaseView", ReplyAction="http://tempuri.org/ICaseManagement/GetCaseViewResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseViewResponse> GetCaseViewAsync(string token, string caseId, bool removeTimeFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseView", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseViewResponse")]
        Web.ServiceReference1.CaseViewResponse UpdateCaseView(string token, Web.ServiceReference1.CaseViewValues oldCaseViewValues, Web.ServiceReference1.CaseViewValues newCaseViewValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseView", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseViewResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseViewResponse> UpdateCaseViewAsync(string token, Web.ServiceReference1.CaseViewValues oldCaseViewValues, Web.ServiceReference1.CaseViewValues newCaseViewValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseOwner", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseOwnerResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse UpdateCaseOwner(string token, string caseId, System.Guid prevUserId, System.Guid newUserId, string messageToNewOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseOwner", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseOwnerResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> UpdateCaseOwnerAsync(string token, string caseId, System.Guid prevUserId, System.Guid newUserId, string messageToNewOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseWatchers", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseWatchersResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse UpdateCaseWatchers(string token, string caseId, int accessTypeId, string watchersToAdd, string watchersToRemove, string messageToNewWatchers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateCaseWatchers", ReplyAction="http://tempuri.org/ICaseManagement/UpdateCaseWatchersResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> UpdateCaseWatchersAsync(string token, string caseId, int accessTypeId, string watchersToAdd, string watchersToRemove, string messageToNewWatchers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertUpdateActivityNote", ReplyAction="http://tempuri.org/ICaseManagement/InsertUpdateActivityNoteResponse")]
        Web.ServiceReference1.InsertUpdateActivityNoteResponse InsertUpdateActivityNote(string token, long caseActivityNoteId, long caseId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertUpdateActivityNote", ReplyAction="http://tempuri.org/ICaseManagement/InsertUpdateActivityNoteResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.InsertUpdateActivityNoteResponse> InsertUpdateActivityNoteAsync(string token, long caseActivityNoteId, long caseId, string noteText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetUserList", ReplyAction="http://tempuri.org/ICaseManagement/GetUserListResponse")]
        Web.ServiceReference1.UserListResponse GetUserList(string token, string searchTerm, bool caseSensitiveSearch, int startPage, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetUserList", ReplyAction="http://tempuri.org/ICaseManagement/GetUserListResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.UserListResponse> GetUserListAsync(string token, string searchTerm, bool caseSensitiveSearch, int startPage, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertCaseHistory", ReplyAction="http://tempuri.org/ICaseManagement/InsertCaseHistoryResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse InsertCaseHistory(string token, int historyChangeType, long caseId, string previousText, string changedText, System.Nullable<int> previousInt, System.Nullable<int> changeInt, System.Nullable<bool> changedBit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/InsertCaseHistory", ReplyAction="http://tempuri.org/ICaseManagement/InsertCaseHistoryResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> InsertCaseHistoryAsync(string token, int historyChangeType, long caseId, string previousText, string changedText, System.Nullable<int> previousInt, System.Nullable<int> changeInt, System.Nullable<bool> changedBit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMobileCaseInboxItems", ReplyAction="http://tempuri.org/ICaseManagement/GetMobileCaseInboxItemsResponse")]
        Web.ServiceReference1.MobileInboxData GetMobileCaseInboxItems(string token, string[] filter, string searchTerm, string sortBy, bool caseSensitiveSearch, int startPage, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMobileCaseInboxItems", ReplyAction="http://tempuri.org/ICaseManagement/GetMobileCaseInboxItemsResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.MobileInboxData> GetMobileCaseInboxItemsAsync(string token, string[] filter, string searchTerm, string sortBy, bool caseSensitiveSearch, int startPage, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetCaseStatistics", ReplyAction="http://tempuri.org/ICaseManagement/GetCaseStatisticsResponse")]
        Web.ServiceReference1.CaseStats GetCaseStatistics(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetCaseStatistics", ReplyAction="http://tempuri.org/ICaseManagement/GetCaseStatisticsResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseStats> GetCaseStatisticsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateSessionTimeout", ReplyAction="http://tempuri.org/ICaseManagement/UpdateSessionTimeoutResponse")]
        Web.ServiceReference1.CaseUpdateSessionStatusResponse UpdateSessionTimeout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/UpdateSessionTimeout", ReplyAction="http://tempuri.org/ICaseManagement/UpdateSessionTimeoutResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseUpdateSessionStatusResponse> UpdateSessionTimeoutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/DeleteCaseActivityNote", ReplyAction="http://tempuri.org/ICaseManagement/DeleteCaseActivityNoteResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse DeleteCaseActivityNote(string token, int activityNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/DeleteCaseActivityNote", ReplyAction="http://tempuri.org/ICaseManagement/DeleteCaseActivityNoteResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> DeleteCaseActivityNoteAsync(string token, int activityNoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/CreateNotification", ReplyAction="http://tempuri.org/ICaseManagement/CreateNotificationResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse CreateNotification(string token, int notificationType, string deviceID, long caseId, string userIdToSendNotification, string alertName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/CreateNotification", ReplyAction="http://tempuri.org/ICaseManagement/CreateNotificationResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> CreateNotificationAsync(string token, int notificationType, string deviceID, long caseId, string userIdToSendNotification, string alertName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/CreateMessage", ReplyAction="http://tempuri.org/ICaseManagement/CreateMessageResponse")]
        Web.ServiceReference1.MobileMessageInfo CreateMessage(string token, int caseId, string messageText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/CreateMessage", ReplyAction="http://tempuri.org/ICaseManagement/CreateMessageResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.MobileMessageInfo> CreateMessageAsync(string token, int caseId, string messageText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMessages", ReplyAction="http://tempuri.org/ICaseManagement/GetMessagesResponse")]
        Web.ServiceReference1.MobileMessageInfo GetMessages(string token, int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMessages", ReplyAction="http://tempuri.org/ICaseManagement/GetMessagesResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.MobileMessageInfo> GetMessagesAsync(string token, int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMessageScriptedResponses", ReplyAction="http://tempuri.org/ICaseManagement/GetMessageScriptedResponsesResponse")]
        Web.ServiceReference1.MobilePredefinedResponses GetMessageScriptedResponses(string token, int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/GetMessageScriptedResponses", ReplyAction="http://tempuri.org/ICaseManagement/GetMessageScriptedResponsesResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.MobilePredefinedResponses> GetMessageScriptedResponsesAsync(string token, int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/MarkMessagesRead", ReplyAction="http://tempuri.org/ICaseManagement/MarkMessagesReadResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse MarkMessagesRead(string token, int[] caseMessageIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/MarkMessagesRead", ReplyAction="http://tempuri.org/ICaseManagement/MarkMessagesReadResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> MarkMessagesReadAsync(string token, int[] caseMessageIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/SetMobileNotificationMode", ReplyAction="http://tempuri.org/ICaseManagement/SetMobileNotificationModeResponse")]
        Web.ServiceReference1.CaseGenericStatusResponse SetMobileNotificationMode(string token, Web.ServiceReference1.CaseManagementEnumsCaseMobileNotificationModeType mobileNotificationMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/SetMobileNotificationMode", ReplyAction="http://tempuri.org/ICaseManagement/SetMobileNotificationModeResponse")]
        System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> SetMobileNotificationModeAsync(string token, Web.ServiceReference1.CaseManagementEnumsCaseMobileNotificationModeType mobileNotificationMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/TestCall", ReplyAction="http://tempuri.org/ICaseManagement/TestCallResponse")]
        string[] TestCall(string token, int surveyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaseManagement/TestCall", ReplyAction="http://tempuri.org/ICaseManagement/TestCallResponse")]
        System.Threading.Tasks.Task<string[]> TestCallAsync(string token, int surveyId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICaseManagementChannel : Web.ServiceReference1.ICaseManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CaseManagementClient : System.ServiceModel.ClientBase<Web.ServiceReference1.ICaseManagement>, Web.ServiceReference1.ICaseManagement {
        
        public CaseManagementClient() {
        }
        
        public CaseManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CaseManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaseManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ServicesCheck(string companyName) {
            return base.Channel.ServicesCheck(companyName);
        }
        
        public System.Threading.Tasks.Task<string> ServicesCheckAsync(string companyName) {
            return base.Channel.ServicesCheckAsync(companyName);
        }
        
        public Web.ServiceReference1.AuthenticateResponse Authenticate(string userName, string password, string companyName, int companyId) {
            return base.Channel.Authenticate(userName, password, companyName, companyId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.AuthenticateResponse> AuthenticateAsync(string userName, string password, string companyName, int companyId) {
            return base.Channel.AuthenticateAsync(userName, password, companyName, companyId);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> LogoutAsync(string token) {
            return base.Channel.LogoutAsync(token);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse InsertUpdateDeviceId(string token, string deviceRegistrationToken, int applicationTypeId, int deviceTypeId) {
            return base.Channel.InsertUpdateDeviceId(token, deviceRegistrationToken, applicationTypeId, deviceTypeId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> InsertUpdateDeviceIdAsync(string token, string deviceRegistrationToken, int applicationTypeId, int deviceTypeId) {
            return base.Channel.InsertUpdateDeviceIdAsync(token, deviceRegistrationToken, applicationTypeId, deviceTypeId);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse RemoveDeviceId(string token, string deviceRegistrationToken, int applicationTypeId) {
            return base.Channel.RemoveDeviceId(token, deviceRegistrationToken, applicationTypeId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> RemoveDeviceIdAsync(string token, string deviceRegistrationToken, int applicationTypeId) {
            return base.Channel.RemoveDeviceIdAsync(token, deviceRegistrationToken, applicationTypeId);
        }
        
        public Web.ServiceReference1.CaseViewResponse GetCaseView(string token, string caseId, bool removeTimeFields) {
            return base.Channel.GetCaseView(token, caseId, removeTimeFields);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseViewResponse> GetCaseViewAsync(string token, string caseId, bool removeTimeFields) {
            return base.Channel.GetCaseViewAsync(token, caseId, removeTimeFields);
        }
        
        public Web.ServiceReference1.CaseViewResponse UpdateCaseView(string token, Web.ServiceReference1.CaseViewValues oldCaseViewValues, Web.ServiceReference1.CaseViewValues newCaseViewValues) {
            return base.Channel.UpdateCaseView(token, oldCaseViewValues, newCaseViewValues);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseViewResponse> UpdateCaseViewAsync(string token, Web.ServiceReference1.CaseViewValues oldCaseViewValues, Web.ServiceReference1.CaseViewValues newCaseViewValues) {
            return base.Channel.UpdateCaseViewAsync(token, oldCaseViewValues, newCaseViewValues);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse UpdateCaseOwner(string token, string caseId, System.Guid prevUserId, System.Guid newUserId, string messageToNewOwner) {
            return base.Channel.UpdateCaseOwner(token, caseId, prevUserId, newUserId, messageToNewOwner);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> UpdateCaseOwnerAsync(string token, string caseId, System.Guid prevUserId, System.Guid newUserId, string messageToNewOwner) {
            return base.Channel.UpdateCaseOwnerAsync(token, caseId, prevUserId, newUserId, messageToNewOwner);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse UpdateCaseWatchers(string token, string caseId, int accessTypeId, string watchersToAdd, string watchersToRemove, string messageToNewWatchers) {
            return base.Channel.UpdateCaseWatchers(token, caseId, accessTypeId, watchersToAdd, watchersToRemove, messageToNewWatchers);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> UpdateCaseWatchersAsync(string token, string caseId, int accessTypeId, string watchersToAdd, string watchersToRemove, string messageToNewWatchers) {
            return base.Channel.UpdateCaseWatchersAsync(token, caseId, accessTypeId, watchersToAdd, watchersToRemove, messageToNewWatchers);
        }
        
        public Web.ServiceReference1.InsertUpdateActivityNoteResponse InsertUpdateActivityNote(string token, long caseActivityNoteId, long caseId, string noteText) {
            return base.Channel.InsertUpdateActivityNote(token, caseActivityNoteId, caseId, noteText);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.InsertUpdateActivityNoteResponse> InsertUpdateActivityNoteAsync(string token, long caseActivityNoteId, long caseId, string noteText) {
            return base.Channel.InsertUpdateActivityNoteAsync(token, caseActivityNoteId, caseId, noteText);
        }
        
        public Web.ServiceReference1.UserListResponse GetUserList(string token, string searchTerm, bool caseSensitiveSearch, int startPage, int pageSize) {
            return base.Channel.GetUserList(token, searchTerm, caseSensitiveSearch, startPage, pageSize);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.UserListResponse> GetUserListAsync(string token, string searchTerm, bool caseSensitiveSearch, int startPage, int pageSize) {
            return base.Channel.GetUserListAsync(token, searchTerm, caseSensitiveSearch, startPage, pageSize);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse InsertCaseHistory(string token, int historyChangeType, long caseId, string previousText, string changedText, System.Nullable<int> previousInt, System.Nullable<int> changeInt, System.Nullable<bool> changedBit) {
            return base.Channel.InsertCaseHistory(token, historyChangeType, caseId, previousText, changedText, previousInt, changeInt, changedBit);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> InsertCaseHistoryAsync(string token, int historyChangeType, long caseId, string previousText, string changedText, System.Nullable<int> previousInt, System.Nullable<int> changeInt, System.Nullable<bool> changedBit) {
            return base.Channel.InsertCaseHistoryAsync(token, historyChangeType, caseId, previousText, changedText, previousInt, changeInt, changedBit);
        }
        
        public Web.ServiceReference1.MobileInboxData GetMobileCaseInboxItems(string token, string[] filter, string searchTerm, string sortBy, bool caseSensitiveSearch, int startPage, int pageSize) {
            return base.Channel.GetMobileCaseInboxItems(token, filter, searchTerm, sortBy, caseSensitiveSearch, startPage, pageSize);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.MobileInboxData> GetMobileCaseInboxItemsAsync(string token, string[] filter, string searchTerm, string sortBy, bool caseSensitiveSearch, int startPage, int pageSize) {
            return base.Channel.GetMobileCaseInboxItemsAsync(token, filter, searchTerm, sortBy, caseSensitiveSearch, startPage, pageSize);
        }
        
        public Web.ServiceReference1.CaseStats GetCaseStatistics(string token) {
            return base.Channel.GetCaseStatistics(token);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseStats> GetCaseStatisticsAsync(string token) {
            return base.Channel.GetCaseStatisticsAsync(token);
        }
        
        public Web.ServiceReference1.CaseUpdateSessionStatusResponse UpdateSessionTimeout(string token) {
            return base.Channel.UpdateSessionTimeout(token);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseUpdateSessionStatusResponse> UpdateSessionTimeoutAsync(string token) {
            return base.Channel.UpdateSessionTimeoutAsync(token);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse DeleteCaseActivityNote(string token, int activityNoteId) {
            return base.Channel.DeleteCaseActivityNote(token, activityNoteId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> DeleteCaseActivityNoteAsync(string token, int activityNoteId) {
            return base.Channel.DeleteCaseActivityNoteAsync(token, activityNoteId);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse CreateNotification(string token, int notificationType, string deviceID, long caseId, string userIdToSendNotification, string alertName) {
            return base.Channel.CreateNotification(token, notificationType, deviceID, caseId, userIdToSendNotification, alertName);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> CreateNotificationAsync(string token, int notificationType, string deviceID, long caseId, string userIdToSendNotification, string alertName) {
            return base.Channel.CreateNotificationAsync(token, notificationType, deviceID, caseId, userIdToSendNotification, alertName);
        }
        
        public Web.ServiceReference1.MobileMessageInfo CreateMessage(string token, int caseId, string messageText) {
            return base.Channel.CreateMessage(token, caseId, messageText);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.MobileMessageInfo> CreateMessageAsync(string token, int caseId, string messageText) {
            return base.Channel.CreateMessageAsync(token, caseId, messageText);
        }
        
        public Web.ServiceReference1.MobileMessageInfo GetMessages(string token, int caseId) {
            return base.Channel.GetMessages(token, caseId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.MobileMessageInfo> GetMessagesAsync(string token, int caseId) {
            return base.Channel.GetMessagesAsync(token, caseId);
        }
        
        public Web.ServiceReference1.MobilePredefinedResponses GetMessageScriptedResponses(string token, int caseId) {
            return base.Channel.GetMessageScriptedResponses(token, caseId);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.MobilePredefinedResponses> GetMessageScriptedResponsesAsync(string token, int caseId) {
            return base.Channel.GetMessageScriptedResponsesAsync(token, caseId);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse MarkMessagesRead(string token, int[] caseMessageIds) {
            return base.Channel.MarkMessagesRead(token, caseMessageIds);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> MarkMessagesReadAsync(string token, int[] caseMessageIds) {
            return base.Channel.MarkMessagesReadAsync(token, caseMessageIds);
        }
        
        public Web.ServiceReference1.CaseGenericStatusResponse SetMobileNotificationMode(string token, Web.ServiceReference1.CaseManagementEnumsCaseMobileNotificationModeType mobileNotificationMode) {
            return base.Channel.SetMobileNotificationMode(token, mobileNotificationMode);
        }
        
        public System.Threading.Tasks.Task<Web.ServiceReference1.CaseGenericStatusResponse> SetMobileNotificationModeAsync(string token, Web.ServiceReference1.CaseManagementEnumsCaseMobileNotificationModeType mobileNotificationMode) {
            return base.Channel.SetMobileNotificationModeAsync(token, mobileNotificationMode);
        }
        
        public string[] TestCall(string token, int surveyId) {
            return base.Channel.TestCall(token, surveyId);
        }
        
        public System.Threading.Tasks.Task<string[]> TestCallAsync(string token, int surveyId) {
            return base.Channel.TestCallAsync(token, surveyId);
        }
    }
}
